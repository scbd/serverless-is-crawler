AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-is-crawler
Globals:
  Function:
    Timeout: 3

Resources:
  HttpHeaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: http-header/
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Handler: app.lambdaHandler
      Runtime: nodejs10.x
  RedirectCrawlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: redirect-crawler/
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Handler: app.lambdaHandler
      Runtime: nodejs10.x

  LambdaEdgeFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
        Path: "/"
        ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Sid: "AllowLambdaServiceToAssumeRole"
              Effect: "Allow"
              Action: 
                - "sts:AssumeRole"
              Principal:
                Service: 
                  - "lambda.amazonaws.com"
                  - "edgelambda.amazonaws.com"
        

Outputs:
  HttpHeaderFunction:
    Description: "Is Crawler Http Header Lambda Function ARN"
    Value: !GetAtt HttpHeaderFunction.Arn
  RedirectCrawlerFunction:
    Description: "RedirectCrawlerLambda Function ARN"
    Value: !GetAtt RedirectCrawlerFunction.Arn